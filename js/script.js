$(document).ready(function() {

// I'm using the JavaScript Web Audio API to generate the Simon Game sounds

//Setting up the AudioContext and the 5 game sounds

    var audioCtx = new (window.AudioContext || window.webkitAudioContext)()

    var soundBlue = audioCtx.createOscillator();
        soundBlue.frequency.value = 196;
        soundBlue.type = "triangle";
        soundBlue.start();
    var soundGreen = audioCtx.createOscillator();
        soundGreen.frequency.value = 391;
        soundGreen.type = "triangle";
        soundGreen.start();
    var soundYellow = audioCtx.createOscillator();
        soundYellow.frequency.value = 261;
        soundYellow.type = "triangle";
        soundYellow.start();
    var soundRed = audioCtx.createOscillator();
        soundRed.frequency.value = 329;
        soundRed.type = "triangle";
        soundRed.start();
    var errorSound = audioCtx.createOscillator();
        errorSound.frequency.value = 440;
        errorSound.type = "triangle";
        errorSound.start();

    var sound = {
        blue : soundBlue,
        green: soundGreen,
        red: soundRed,
        yellow: soundYellow,
        error: errorSound
    };

    //Setting the sound sequence for 20 moves
        var counter = 0;
    
        var combination = {}; // combination of 20 sounds randomly generated by computer

        var playerSequence = []; //sequence introduced by the player

        var button_press = 0; //keeps track of how many times the player pressed a button
    
        var colors = ["green", "red", "yellow", "blue"];
        
        for(i = 1; i < 21; i++){
            combination[i] = colors[Math.floor(Math.random() * 4)];
        }
        console.log(combination);
    
        var round = 0;

    
    var updateCounter = function(){
        if (counter < 10){
            $(".screen").html("0"+counter);
        } else {
            $(".screen").html(counter);
        }
    }
    
    
    var error = function(){
        //activate error sound  
        errorSound.connect(audioCtx.destination);
        setTimeout(function() { 
            errorSound.disconnect(audioCtx.destination);  
          }, 1000); 
        playerSequence = [];   
        button_press = 0;
    }
    

    var play = function(color, duration){
        var activeClass = color+"__active";
        var selector = "."+color;

    //after a set time (duration) desactivate the sound and remove the active class
      setTimeout(function() { 
        sound[color].disconnect(audioCtx.destination);  
        $(selector).removeClass(activeClass);
      }, duration);
     //activate sound and change color of button (by modifying class)    
        sound[color].connect(audioCtx.destination);
        $(selector).addClass(activeClass);

        counter ++;
        updateCounter();

    }


    var i = 1;

    var playSequence = function() {
    //Duration changes depending on the round - like in the real game 
    console.log("this is round:");
    console.log(round);
        if (round < 6){
            duration = 420;
        } else if (round < 13){
            duration = 320;
        } else {
            duration = 220;
        }

        setTimeout(function () {    
           
           var sound = combination[i];
           console.log(combination[i]);
           
           play(sound, duration);
            
                              
           if (i < round+1) {            
              playSequence();
              i++;               
           } else {
               i = 1;
               console.log("finished all sounds");
               if (round <= 20){
                    round += 1;
                } else {
                    round = 1;
                }
               console.log("it is round:");
               console.log(round);
           }                       
        }, duration + 200)

     }
    

    
    $(".start__button").click(function(){
        counter = 0;
        
        playSequence();

    //Computer playing sounds in sequence
            
    });
    

    //PLAYER'S TURN:
    

    var checkSequence = function(){
        var mistake = 0;
        for (var m = 1; m <= round; m++){
            if (playerSequence[m-1] != combination[m]){
                console.log("you made and error, these are not the same:");
                console.log(playerSequence[m-1]);
                console.log(combination[m]);
                console.log("The value of m and m-1 is:")
                console.log(m);
                console.log(m-1);
                mistake = 1;
                error();
            } else if(m == round && mistake == 0){
                console.log("Correct! They are the same:");
                console.log(playerSequence[m-1]);
                console.log(combination[m]);
                console.log("The value of m and m-1 is:")
                console.log(m);
                console.log(m-1);

                setTimeout(playSequence, 2000);
                playerSequence = [];
                button_press = 0;
            } else{
                console.log("checking");
            }
        }
        

    }




    //When the player pushes the buttons:
    
    $(".field").click(function(){
        button_press ++;
        if (button_press == round){
            setTimeout(checkSequence, 200);
        }
        
    });
    
    $(".blue").click(function(){
        play("blue", 200);
        playerSequence.push("blue");
        console.log(playerSequence);

    });
    
    $(".green").click(function(){
        play("green", 200);
        playerSequence.push("green");
        console.log(playerSequence);

    });
    
    $(".yellow").click(function(){
        play("yellow", 200);
        playerSequence.push("yellow");
        console.log(playerSequence);

    });
    
    $(".red").click(function(){
      play("red", 200);
      playerSequence.push("red");
      console.log(playerSequence);

    });


    //toggle the ON / OFF button
    $(".slider").click(function(){
        $(".slider__button").toggleClass("on");
    });
    
    
  });